"""
1. Реализовать класс Matrix (матрица). Обеспечить перегрузку конструктора класса (метод __init__()),
который должен принимать данные (список списков) для формирования матрицы.

Подсказка: матрица — система некоторых математических величин, расположенных в виде прямоугольной схемы.

Следующий шаг — реализовать перегрузку метода __str__() для вывода матрицы в привычном виде.
Далее реализовать перегрузку метода __add__() для реализации операции сложения двух объектов класса
Matrix (двух матриц). Результатом сложения должна быть новая матрица.
Подсказка: сложение элементов матриц выполнять поэлементно — первый элемент первой строки первой матрицы
складываем с первым элементом первой строки второй матрицы и т.д.
"""


class Matrix:
    def __init__(self, matrix):
        self.matrix = matrix

    # перегрузка метода __str__
    def __str__(self):
        return '\n'.join(['\t'.join([str(s) for s in el]) for el in self.matrix])

    # перегрузка метода __add__ для суммирования матриц поэлементно
    def __add__(self, other):
        rows_res = []  # здесь будет итоговая матрица
        for row_x, row_y in zip(self.matrix, other.matrix):  # для каждой строки матрицы
            rows_res.append([row_x[i] + row_y[i] for i in range(len(row_x))])  # складываем соответсвующие элементы
        return rows_res


m1_list = [[1, -2, 5], [3, 4, 10], [33, 44, 22]]
m2_list = [[100, -200, 250], [300, 400, 999], [13, 14, 11]]

# создаем объекты класса Matrix
m1 = Matrix(m1_list)
m2 = Matrix(m2_list)

# печать матриц
print('Матрица m1:\n', m1, '\n')
print('Матрица m2:\n', m2, '\n')

# печать суммы матриц
print('Сумма матриц:\n', Matrix(m1 + m2))
